import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { cn } from "@/lib/utils";
import { NavMobile } from "@/components/nav-menu/nav-mobile";
import { Header } from "@/components/header";
import { ThemeProvider } from "@/components/theme-provider";
import { Toaster } from "sonner";
import { getSupabaseServerClient } from "@/lib/supabase.server";

const inter = Inter({ subsets: ["latin"], variable: "--font-sans" });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export type AppLayoutProps = React.PropsWithChildren & {
  minimal?: boolean;
};
async function AppLayout(props: AppLayoutProps) {
  const { children, minimal = false } = props;

  const {
    data: { user },
  } = await getSupabaseServerClient().auth.getUser();
  const isAuthenticated = !!user;

  return (
    <html lang="en" suppressHydrationWarning={true}>
      <body
        className={cn(
          inter.className,
          "flex flex-col bg-background antialiased min-h-dvh"
        )}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <Toaster theme="system" duration={6000} richColors closeButton />

          {!minimal && <Header />}

          <main
            className={
              "flex-1 grid grid-cols-1 " +
              (minimal ? "" : "gap-8 px-4 lg:px-8 py-8")
            }
          >
            {children}
          </main>

          <NavMobile isAuthenticated={isAuthenticated} />
        </ThemeProvider>
      </body>
    </html>
  );
}

export default function BasicAppLayout(props: Omit<AppLayoutProps, 'minimal'>) {
  return <AppLayout minimal={false}>{props.children}</AppLayout>
}

export function MinimalAppLayout(props: Omit<AppLayoutProps, 'minimal'>) {
  return <AppLayout minimal={true}>{props.children}</AppLayout>
}
