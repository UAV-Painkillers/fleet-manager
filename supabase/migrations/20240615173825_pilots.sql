create table "public"."pilots" (
    "id" bigint generated by default as identity not null,
    "share_handle" character varying not null default ''::character varying,
    "created_at" timestamp with time zone not null default now(),
    "name" character varying,
    "nickname" character varying,
    "bio" character varying,
    "logoHref" character varying,
    "bannerHref" character varying,
    "tiktok_handle" character varying,
    "youtube_handle" character varying,
    "instagram_handle" character varying,
    "contact_phone" character varying,
    "contact_email" character varying,
    "contact_website" character varying,
    "facebook_handle" character varying,
    "user_id" uuid not null default auth.uid()
);


alter table "public"."pilots" enable row level security;

CREATE UNIQUE INDEX pilots_pkey ON public.pilots USING btree (id);

CREATE UNIQUE INDEX pilots_share_handle_key ON public.pilots USING btree (share_handle);

CREATE UNIQUE INDEX pilots_user_id_key ON public.pilots USING btree (user_id);

alter table "public"."pilots" add constraint "pilots_pkey" PRIMARY KEY using index "pilots_pkey";

alter table "public"."pilots" add constraint "pilots_share_handle_key" UNIQUE using index "pilots_share_handle_key";

alter table "public"."pilots" add constraint "pilots_user_id_key" UNIQUE using index "pilots_user_id_key";

grant delete on table "public"."pilots" to "anon";

grant insert on table "public"."pilots" to "anon";

grant references on table "public"."pilots" to "anon";

grant select on table "public"."pilots" to "anon";

grant trigger on table "public"."pilots" to "anon";

grant truncate on table "public"."pilots" to "anon";

grant update on table "public"."pilots" to "anon";

grant delete on table "public"."pilots" to "authenticated";

grant insert on table "public"."pilots" to "authenticated";

grant references on table "public"."pilots" to "authenticated";

grant select on table "public"."pilots" to "authenticated";

grant trigger on table "public"."pilots" to "authenticated";

grant truncate on table "public"."pilots" to "authenticated";

grant update on table "public"."pilots" to "authenticated";

grant delete on table "public"."pilots" to "service_role";

grant insert on table "public"."pilots" to "service_role";

grant references on table "public"."pilots" to "service_role";

grant select on table "public"."pilots" to "service_role";

grant trigger on table "public"."pilots" to "service_role";

grant truncate on table "public"."pilots" to "service_role";

grant update on table "public"."pilots" to "service_role";

create policy "Enable read access for all users"
on "public"."pilots"
as permissive
for select
to public
using (true);


create policy "Enable read/write for users based on user_id"
on "public"."pilots"
as permissive
for all
to public
using ((( SELECT auth.uid() AS uid) = user_id));



